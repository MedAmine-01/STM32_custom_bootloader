#include "bootloader_commands.h"



static void bootloader_send_nack(void){
	uint8_t nack = BL_NACK;
	HAL_UART_Transmit(&huart2, &nack, 1, HAL_MAX_DELAY);
}

static void bootloader_send_ack(uint8_t command_code, uint8_t follow_length){
	uint8_t ack_buff[2];
	ack_buff[0]=BL_ACK;
	ack_buff[1]=follow_length;
	HAL_UART_Transmit(&huart2, ack_buff, 2, HAL_MAX_DELAY);
}

void bootloader_handle_getver_cmd(char * bl_rx_buffer){
	uint8_t bl_version;

	//1. verify the checksum
	if(!bootloader_verify_crc(&pBuffer[0],pBuffer[0]+1,0)){
		bootloader_send_ack(pBuffer[0],1);
		bl_version = get_bootloader_version();
		bootloader_uart_write_data(&bl_version,1);
	}
	else{
		bootloader_send_nack();
	}
}
void bootloader_handle_memwrite_cmd(char * bl_rx_buffer){}
void bootloader_handle_flasherase_cmd(char * bl_rx_buffer){}
void bootloader_handle_gotoaddress_cmd(char * bl_rx_buffer){}
void bootloader_handle_getrdpstatus(){}
void bootloader_handle_getcid_cmd(char * bl_rx_buffer){}
void bootloader_handle_gethelp_cmd(char * bl_rx_buffer){}
void bootloader_handle_disrwprotect_cmd(char * bl_rx_buffer){}
void bootloader_handle_otpread_cmd(char * bl_rx_buffer){}
void bootloader_handle_readsectorstatus_cmd(char * bl_rx_buffer){}
void bootloader_handle_memread_cmd(char * bl_rx_buffer){}
void bootloader_handle_enrwprotect_cmd(char * bl_rx_buffer){}
